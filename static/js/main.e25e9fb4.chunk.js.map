{"version":3,"sources":["Countries.tsx","Institutes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Countries","aseanCountries","eaesCountries","countriesOptions","props","countries","map","name","text","value","onChange","checked","state","values","setCountry","country","handleCountryGroup","group","groupValue","forEach","every","array","allDeselected","isDisabled","selectedCount","maxSelected","this","displayMembership","label","key","className","membershipOnChange","size","isValid","title","type","icon","colored","option","style","display","disabled","renderMembership","membershipValue","selected","Object","keys","filter","k","find","x","includes","length","minSelected","React","Component","generateInitialValuesForInstitutes","institutes","reduce","a","c","options","a1","c1","Institutes","onChangeRadio","result","getResultValue","otherValues","split","console","log","v","onChangeCheckbox","renderChildren","institute","o","resultValue","children","level","renderRadio","parent","renderCheckbox","renderInstitute","condition","optionValue","marginLeft","paddingLeft","marginTop","borderLeft","i","defaultProps","COUNTRIES","ADVOCACY","OPENNESS","SCOPE","COMMITMENT","INHERITANCE","INHERITANCE_REQUIRED","UNIQNESS","INSTITUTES","App","minCountriesSelected","maxCountriesSelected","membership","onInstituteChange","extraState","setState","onCountriesChange","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gZAyBaA,EAAb,2MACEC,eAAiB,CACf,uCACA,6CACA,mDACA,2BACA,yDACA,mDACA,uCACA,mDACA,6CACA,0DAXJ,EAcEC,cAAgB,CACd,wCAfJ,EAkBEC,iBAAmB,EAAKC,MAAMC,UAAUC,KAAI,SAAAC,GAAI,MAAK,CAAEC,KAAMD,EAAME,MAAOF,MAlB5E,EAoBEG,SAAW,SAACC,EAAkBF,GAC5B,IAAIG,EAAK,eAAQ,EAAKR,MAAMS,OAAnB,eAA4BJ,EAAQE,IAEvCG,EAAa,SAACC,GAClBH,EAAMG,GAAWJ,GAKbK,EAAqB,SAACC,EAAiBC,GACvCT,IAAUS,GACZD,EAAME,QAAQL,GAEAG,EAP6BG,OAAM,SAAAL,GAAO,OAAIH,EAAMG,QAQlEH,EAAMM,IAAc,GAPF,SAACG,GAAD,OAAqBA,EAAMD,OAAM,SAAAL,GAAO,OAAKH,EAAMG,MASnEO,CAAcL,KAChBL,EAAMM,IAAc,IAIxBF,EAAmB,EAAKf,eAAgB,kCACxCe,EAAmB,EAAKd,cAAe,4BAEvC,EAAKE,MAAMM,SAASE,IA5CxB,EA8DEW,WAAa,SAACd,GAEZ,OADmB,EAAKL,MAAMS,OAAOJ,OAKjC,EAAKe,eAAiB,EAAKpB,MAAMqB,cAAgB,EAAKD,gBApE9D,gFA6FmBf,EAAgBM,GAAkB,IAAD,OAChD,OAAKW,KAAKtB,MAAMuB,kBAGR,kBAAC,IAAD,CAAYC,MAAO,gGAAsBC,IAAK,aAAed,EAASe,UAAU,mBACtF,kBAAC,IAAD,CACEtB,KAAM,eACNC,MAAO,MACPC,SAAU,kBAAM,EAAKN,MAAM2B,oBAAmB,EAAMhB,IACpDJ,QAASF,IAEX,kBAAC,IAAD,CACED,KAAM,qBACNC,MAAO,KACPC,SAAU,kBAAM,EAAKN,MAAM2B,oBAAmB,EAAOhB,IACrDJ,SAAUF,KAbL,OA/Fb,+BAgHY,IAAD,OACP,OAAQ,6BACN,kBAAC,IAAD,CAASuB,KAAK,MAAd,8JAIGN,KAAKO,SAAW,kBAAC,IAAD,CACfC,MAAM,8PACNC,KAAK,QACLC,KACE,kBAAC,IAAD,CACEC,SAAS,MAKjB,yBAAKP,UAAU,kBACb,kBAAC,IAAD,CAAeF,MAAO,kBAAC,IAAD,CAAOI,KAAK,KAAKN,KAAKE,QACzCF,KAAKvB,iBAAiBG,KAAI,SAAAgC,GAAM,OAC/B,yBAAKT,IAAKS,EAAO7B,MAAO8B,MAAO,CAAEC,QAAS,SACxC,kBAAC,IAAD,eACEX,IAAKS,EAAO7B,MACZC,SAAU,EAAKA,SACf+B,SAAU,EAAKlB,WAAWe,EAAO7B,OACjCE,QAAS,EAAKP,MAAMS,OAAOyB,EAAO7B,QAC9B6B,IAEL,EAAKI,iBAAiB,EAAKtC,MAAMuC,gBAAgBL,EAAO7B,OAAQ6B,EAAO7B,gBA3ItF,oCA+CuB,IAAD,OACdmC,EAAWC,OAAOC,KAAKpB,KAAKtB,MAAMS,QAAQkC,QAAO,SAAAC,GAAC,OAAI,EAAK5C,MAAMS,OAAOmC,MAEtEhC,EAAqB,SAACC,EAAiBC,GACvC0B,EAASK,MAAK,SAAAC,GAAC,OAAIA,IAAMhC,OAC3B0B,EAAWA,EAASG,QAAO,SAAAC,GAAC,OAAK/B,EAAMkC,SAASH,QAOpD,OAHAhC,EAAmBU,KAAKzB,eAAgB,kCACxCe,EAAmBU,KAAKxB,cAAe,4BAEhC0C,EAASQ,SA3DpB,4BA2EI,OAAI1B,KAAKtB,MAAMiD,cAAgB3B,KAAKtB,MAAMqB,YAClC,6JAAN,OAAuCC,KAAKtB,MAAMiD,aAEhD3B,KAAKtB,MAAMqB,aAAeC,KAAKtB,MAAMiD,aAAe3B,KAAKtB,MAAMqB,cAAgBC,KAAKtB,MAAMiD,YACtF,0IAAN,OAAmC3B,KAAKtB,MAAMqB,aAEzC,KAjFX,8BAqFI,QAAIC,KAAKtB,MAAMiD,aAAgB3B,KAAKF,cAAgBE,KAAKtB,MAAMiD,gBAG3D3B,KAAKtB,MAAMqB,aAAgBC,KAAKF,cAAgBE,KAAKtB,MAAMqB,iBAxFnE,GAA+B6B,IAAMC,W,iBChBxBC,EAAqC,SAACC,GAAD,OAA8BA,EAAWC,QAAO,SAACC,EAAGC,GAAJ,sBAC7FD,EAD6F,GAE7FC,EAAEC,QAAQH,QAAO,SAACI,EAAIC,GAAL,sBAAkBD,EAAlB,eAAuBF,EAAEnD,MAAQ,IAAMsD,EAAGtD,MAAQ,CAAEA,OAAO,OAAY,OACzF,KA6BSuD,EAAb,2MAQEC,cAAgB,SAAC/C,GAAD,OAAwB,SAACT,EAAeE,GACtD,IAAMuD,EAAS,EAAKC,eAAejD,EAAYT,GACzC2D,EAAcvB,OAAOC,KAAK,EAAK1C,MAAMS,QACxCkC,QAAO,SAAAG,GAAM,IAAD,EACEA,EAAEmB,MAAM,KACrB,OAFW,sBAEEnD,KAEd6B,QAAO,SAAAG,GAAM,IAAD,EACGA,EAAEmB,MAAM,KACtB,OAFW,sBAEE5D,KAEjB6D,QAAQC,IAAIL,EAAQvD,GACpB,IAAMC,EAAK,eACN,EAAKR,MAAMS,OADL,eAERqD,EAFQ,eAGJ,EAAK9D,MAAMS,OAAOqD,GAHd,CAIPzD,MAAOE,MAGXyD,EAAYjD,SAAQ,SAAAqD,GAClB5D,EAAM4D,GAAG/D,OAASE,KAGpB,EAAKP,MAAMM,SAASE,KA/BxB,EAkCE6D,iBAAmB,SAACvD,GAAD,OAAwB,SAACP,EAAkBF,GAC5D,IAAMyD,EAAS,EAAKC,eAAejD,EAAYT,GAC/C6D,QAAQC,IAAIL,EAAQvD,GACpB,IAAMC,EAAK,eACN,EAAKR,MAAMS,OADL,eAERqD,EAFQ,eAGJ,EAAK9D,MAAMS,OAAOqD,GAHd,CAIPzD,MAAOE,MAGX,EAAKP,MAAMM,SAASE,KA5CxB,EA+CE8D,eAAiB,SAACC,GAA2B,IACnCd,EAAsCc,EAAtCd,QAAuB3C,GAAeyD,EAA7B/C,MAA6B+C,EAAtBlE,OAExB,OAAOoD,EAAQvD,KAAI,SAAAsE,GACjB,IAAMC,EAAc,EAAKV,eAAejD,EAAY0D,EAAEnE,OAEtD,GADA6D,QAAQC,IAAI,IAAKK,EAAGC,EAAa,EAAKzE,MAAMS,OAAOgE,GAAapE,QAC1DmE,EAAEE,WAAY,EAAK1E,MAAMS,OAAOgE,GAAapE,MACjD,OAAO,KAEJ,EAAKL,MAAMS,OAAOgE,GAAaC,WAClC,EAAK1E,MAAMS,OAAOgE,GAAaC,SAAWtB,EAAmCoB,EAAEE,aAYjF,OAAQ,kBAACd,EAAD,CACNnD,OAAQ,EAAKT,MAAMS,OAAOgE,GAAaC,SACvCrB,WAAYmB,EAAEE,WACdpE,SAbe,SAACG,GAChB,IAAMD,EAAK,eACN,EAAKR,MAAMS,OADL,eAERgE,EAFQ,eAGJ,EAAKzE,MAAMS,OAAOgE,GAHd,CAIPC,SAAUjE,MAGd,EAAKT,MAAMM,SAASE,IAMpBmE,MAAQ,EAAK3E,MAAM2E,MAAQ,QAzEnC,EA6EEC,YAAc,SAACL,EAAuBM,GAAyB,IACrDpB,EAAsCc,EAAtCd,QAASjC,EAA6B+C,EAA7B/C,MAAcV,EAAeyD,EAAtBlE,MACxB,OACE,oCACE,kBAAC,IAAD,CAAYmB,MAAOA,GAChBiC,EAAQvD,KAAI,SAAAsE,GACX,IAAMC,EAAc,EAAKV,eAAejD,EAAY0D,EAAEnE,OAEtD,OADA6D,QAAQC,IAAI,cAAe,EAAKnE,MAAMS,OAAQ,EAAKT,MAAMS,OAAOgE,GAAcA,GACtE,yBAAKhD,IAAKgD,GAEhB,kBAAC,IAAD,CACErE,KAAMoE,EAAEhD,MACRnB,MAAOmE,EAAEnE,MACTC,SAAU,EAAKuD,cAAc/C,GAC7BP,QAAS,EAAKP,MAAMS,OAAOgE,GAAapE,aAK/C,EAAKiE,eAAeC,KAhG7B,EAoGEO,eAAiB,SAACP,EAAuBM,GAAyB,IACxDpB,EAAsCc,EAAtCd,QAASjC,EAA6B+C,EAA7B/C,MAAcV,EAAeyD,EAAtBlE,MACxB,OAAQ,oCACN,kBAAC,IAAD,CAAemB,MAAOA,GACnBiC,EAAQvD,KAAI,SAAAsE,GACX,IAAMC,EAAc,EAAKV,eAAejD,EAAY0D,EAAEnE,OAEtD,OADA6D,QAAQC,IAAI,iBAAkB,EAAKnE,MAAMS,OAAQ,EAAKT,MAAMS,OAAOgE,GAAcA,GAE/E,yBAAKhD,IAAKgD,GAER,kBAAC,IAAD,CACErE,KAAMoE,EAAEhD,MACRnB,MAAOmE,EAAEnE,MACTC,SAAU,EAAK+D,iBAAiBvD,GAChCP,QAAS,EAAKP,MAAMS,OAAOgE,GAAapE,aAKjD,EAAKiE,eAAeC,KAvH3B,EA2HEQ,gBAAkB,SAACR,EAAuBM,GACxC,GAAIN,EAAUS,YAAcT,EAAUS,UAAU,EAAKhF,MAAMS,QACzD,OAAO,KAYT,OAAQ,yBAAKgB,IAAK8C,EAAUlE,MAAOqB,UAAW,kBARrB,UAAnB6C,EAAUxC,KACL,EAAK6C,YAAYL,EAAWM,GAEd,aAAnBN,EAAUxC,KACL,EAAK+C,eAAeP,EAAWM,QADxC,IApIN,8EAIiB/D,EAAoBmE,GACjC,OAAOnE,EAAa,IAAMmE,IAL9B,+BA8IY,IAAD,OACD9C,EAAQ,CACZ+C,WAAW,GAAD,OAnLK,GAmLA5D,KAAKtB,MAAM2E,MAAhB,MACVQ,YAAY,GAAD,OAnLK,EAmLL,MACXC,UAAU,GAAD,OApLO,EAoLF9D,KAAKtB,MAAM2E,MAAhB,MACTU,WAAY/D,KAAKtB,MAAM2E,MAAQ,kBAAoB,QAGrD,OAAQ,yBAAKxC,MAAQA,GAClBb,KAAKtB,MAAMqD,WAAWnD,KAAI,SAAAoF,GACzB,OAAO,EAAKP,gBAAgBO,WAxJpC,GAAgCpC,IAAMC,WAAzBS,EACJ2B,aAAe,CACpBZ,MAAO,GCnCX,IAAMa,EAAY,CAChB,yDACA,iCACA,yDACA,oGACA,wFACA,6CACA,6CACA,2BACA,mDACA,iCACA,yDACA,mDACA,uCACA,iCACA,2BACA,2BACA,iCACA,mDACA,6CACA,mDACA,uCACA,kFACA,sEACA,mDACA,qGACA,2BACA,8FACA,uCACA,mDACA,qBACA,6CACA,6CACA,yDACA,2BACA,oDACA,wCAGIC,EAAuB,CAC3BjE,MAAO,sHACPnB,MAAO,WACP0B,KAAM,QACN0B,QAAS,CACP,CAAEjC,MAAO,qEAAenB,MAAO,kBAC/B,CAAEmB,MAAO,iFAAiBnB,MAAO,iBACjC,CAAEmB,MAAO,0FAAqBnB,MAAO,wBAInCqF,EAAuB,CAC3BlE,MAAO,+DACPnB,MAAO,WACP0B,KAAM,QACN0B,QAAS,CACP,CAAEjC,MAAO,sHAAwBnB,MAAO,oBACxC,CACEmB,MAAO,sHACPnB,MAAO,qBACPqE,SAAU,iBAAM,CACde,OAMFE,EAAoB,CACxBnE,MAAO,0GACPnB,MAAO,QACP0B,KAAM,WACN0B,QAAS,CACP,CAAEjC,MAAO,iFAAiBnB,MAAO,YACjC,CAAEmB,MAAO,sHAAwBnB,MAAO,wBAatCuF,EAAyB,CAC7BpE,MAAO,4HACPnB,MAAO,aACP0B,KAAM,QACN0B,QAAS,CACP,CAAEjC,MAAO,mGAAoBnB,MAAO,kBACpC,CAAEmB,MAAO,qEAAenB,MAAO,gBAI7BwF,EAA0B,CAC9BrE,MAAO,2EACPnB,MAAO,cACP0B,KAAM,QACN0B,QAAS,CACP,CAAEjC,MAAO,iCAASnB,MAAO,OACzB,CACEmB,MAAO,qEACPnB,MAAO,YACPqE,SAAU,iBAAM,CACdoB,OAMFA,EAAmC,CACvCtE,MAAO,+IACPnB,MAAO,uBACP0B,KAAM,QACN0B,QAAS,CACP,CACEjC,MAAO,4JACPnB,MAAO,MACPqE,SAAU,iBAAM,CACdiB,EACAC,EACAG,EACAL,KAGJ,CAAElE,MAAO,sEAAgBnB,MAAO,QAK9B0F,EAAuB,CAC3BvE,MAAO,2EACPnB,MAAO,WACP0B,KAAM,QACN0B,QAAS,CACP,CACEjC,MAAO,gHACPnB,MAAO,cACPqE,SAAU,iBAAM,CACdiB,EACAC,EACAC,EACAH,KAGJ,CAAElE,MAAO,gHAAuBnB,MAAO,YAKrC2F,EAA2B,CAC/BL,EA7E6B,CAC7BnE,MAAO,iFACPnB,MAAO,aACP0B,KAAM,QACN0B,QAAS,CACP,CAAEjC,MAAO,iFAAiBnB,MAAO,aACjC,CAAEmB,MAAO,uFAAkBnB,MAAO,kBAyEpCuF,EACAG,EACAF,EACAH,GA2FaO,E,2MArEbhG,UAAYuF,E,EACZnC,WAAa2C,E,EAEbxF,MAAQ,CACNP,UAAW,EAAKA,UAAUqD,QAAO,SAACC,EAAGC,GAAJ,sBAAgBD,EAAhB,eAAoBC,GAAI,MAAU,IACnEH,WAAYD,EAAmC,EAAKC,YACpD6C,qBAAsB,EACtBC,qBAAsB,EACtBC,WAAY,EAAKnG,UAAUqD,QAAO,SAACC,EAAGC,GAAJ,sBAAgBD,EAAhB,eAAoBC,GAAI,MAAU,IACpEjC,mBAAmB,G,EAGrB8E,kBAAoB,SAAChD,GACnB,IAAIiD,EAAkB,GAClBjD,EAAW,wBACbiD,EAAa,CAAEJ,qBAAsB,EAAGC,qBAAsB,GACrD9C,EAAW,6BACpBiD,EAAa,CAAEJ,qBAAsB,EAAGC,qBAAsB,IAEhEjC,QAAQC,IAAI,uCAAwCd,EAAW,0BAC3DA,EAAW,yBAAyBhD,MACtCiG,EAAW/E,mBAAoB,EAE/B+E,EAAW/E,mBAAoB,EAEjC,EAAKgF,SAAL,aAAgBlD,cAAeiD,IAC/BpC,QAAQC,IAAId,I,EAGdmD,kBAAoB,SAACvG,GACnB,EAAKsG,SAAS,CAAEtG,cAChBiE,QAAQC,IAAIlE,I,EAGd0B,mBAAqB,SAACtB,EAAgBF,GACpC+D,QAAQC,IAAI,qBAAsB9D,EAAOF,GACzC,EAAKoG,SAAS,CAAEH,WAAW,eAAM,EAAK5F,MAAM4F,WAAlB,eAA+BjG,EAAOE,O,wEAIhE,OACE,yBAAKqB,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAASE,KAAK,MAAd,iMAGA,kBAAC,EAAD,CACEyB,WAAY/B,KAAK+B,WACjB/C,SAAUgB,KAAK+E,kBACf5F,OAAQa,KAAKd,MAAM6C,cAGvB,yBAAK3B,UAAU,kBACb,kBAAC,EAAD,CACEzB,UAAWqB,KAAKrB,UAChBK,SAAUgB,KAAKkF,kBACf/F,OAAQa,KAAKd,MAAMP,UACnBgD,YAAa3B,KAAKd,MAAM0F,qBACxB7E,YAAaC,KAAKd,MAAM2F,qBACxB5D,gBAAiBjB,KAAKd,MAAM4F,WAC5B7E,kBAAmBD,KAAKd,MAAMe,kBAC9BI,mBAAoBL,KAAKK,2B,GA9DnBuB,IAAMC,WC9KJsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.e25e9fb4.chunk.js","sourcesContent":["import React from 'react';\nimport CheckBox from 'arui-feather/checkbox';\nimport CheckBoxGroup from 'arui-feather/checkbox-group';\nimport Label from 'arui-feather/label';\nimport Plate from 'arui-feather/plate';\nimport IconError from 'arui-feather/icon/ui/error';\nimport Heading from 'arui-feather/heading';\nimport RadioGroup from 'arui-feather/radio-group';\nimport Radio from 'arui-feather/radio';\n\nexport interface ICountriesValues {\n  [k: string]: boolean;\n}\ninterface IProps {\n  onChange: (values: ICountriesValues) => void;\n  countries: string[];\n  values: ICountriesValues;\n  minSelected: number;\n  maxSelected: number;\n\n  membershipValue: ICountriesValues;\n  displayMembership: boolean;\n  membershipOnChange: (value: boolean, name: string) => void;\n}\n\nexport class Countries extends React.Component<IProps> {\n  aseanCountries = [\n    'Бруней',\n    'Вьетнам',\n    'Камбоджа',\n    'Лаос',\n    'Индонезия',\n    'Малайзия',\n    'Мьянма',\n    'Сингапур',\n    'Таиланд',\n    'Филиппины',\n  ]\n\n  eaesCountries = [\n    'Россия'\n  ]\n\n  countriesOptions = this.props.countries.map(name => ({ text: name, value: name }));\n\n  onChange = (checked: boolean, value: string) => {\n    let state = { ...this.props.values, [value]: checked };\n\n    const setCountry = (country: string) => {\n      state[country] = checked;\n    };\n    const allSelected = (array: string[]) => array.every(country => state[country]);\n    const allDeselected = (array: string[]) => array.every(country => !state[country]);\n\n    const handleCountryGroup = (group: string[], groupValue: string) => {\n      if (value === groupValue) {\n        group.forEach(setCountry);\n      }\n      if (allSelected(group)) {\n        state[groupValue] = true;\n      }\n      if (allDeselected(group)) {\n        state[groupValue] = false\n      }\n    }\n\n    handleCountryGroup(this.aseanCountries, 'АСЕАН');\n    handleCountryGroup(this.eaesCountries, 'ЕАЭС');\n\n    this.props.onChange(state);\n  }\n\n  get selectedCount() {\n    let selected = Object.keys(this.props.values).filter(k => this.props.values[k]);\n\n    const handleCountryGroup = (group: string[], groupValue: string) => {\n      if (selected.find(x => x === groupValue)) {\n        selected = selected.filter(k => !group.includes(k));\n      }\n    };\n\n    handleCountryGroup(this.aseanCountries, 'АСЕАН');\n    handleCountryGroup(this.eaesCountries, 'ЕАЭС');\n\n    return selected.length;\n  }\n\n  isDisabled = (value: string) => {\n    const isSelected = this.props.values[value];\n    if (isSelected) {\n      return false;\n    }\n\n    if (this.selectedCount && this.props.maxSelected === this.selectedCount) {\n      return true;\n    }\n    return false;\n  }\n\n  get label() {\n    if (this.props.minSelected && !this.props.maxSelected) {\n      return `Необходимо выбрать не меньше ${this.props.minSelected}`\n    }\n    if (this.props.maxSelected && this.props.minSelected && this.props.maxSelected === this.props.minSelected) {\n      return `Необходимо выбрать ровно ${this.props.maxSelected}`\n    }\n    return '';\n  }\n\n  get isValid() {\n    if (this.props.minSelected && (this.selectedCount < this.props.minSelected)) {\n      return false;\n    }\n    if (this.props.maxSelected && (this.selectedCount > this.props.maxSelected)) {\n      return false;\n    }\n    return true;\n  }\n  renderMembership(value: boolean, country: string) {\n    if (!this.props.displayMembership) {\n      return null;\n    }\n    return (<RadioGroup label={'Состоит в базовом?'} key={'membership' + country} className='App__membership'>\n      <Radio\n        text={'Да'}\n        value={'yes'}\n        onChange={() => this.props.membershipOnChange(true, country)}\n        checked={value}\n      />\n      <Radio\n        text={'Нет'}\n        value={'no'}\n        onChange={() => this.props.membershipOnChange(false, country)}\n        checked={!value}\n      />\n    </RadioGroup>);\n  }\n  render() {\n    return (<div>\n      <Heading size='xs'>\n        Выберите страны/объединения:\n      </Heading>\n      {\n        !this.isValid && <Plate\n          title='Выбрано неверное количество стран/объединений:'\n          type='error'\n          icon={\n            <IconError\n              colored={true}\n            />\n          }\n        />\n      }\n      <div className=\"App__container\">\n        <CheckBoxGroup label={<Label size='m'>{this.label}</Label>}>\n          {this.countriesOptions.map(option => (\n            <div key={option.value} style={{ display: 'flex' }}>\n              <CheckBox\n                key={option.value}\n                onChange={this.onChange}\n                disabled={this.isDisabled(option.value)}\n                checked={this.props.values[option.value]}\n                {...option}\n              />\n              {this.renderMembership(this.props.membershipValue[option.value], option.value)}\n            </div>\n          ))}\n        </CheckBoxGroup>\n      </div>\n    </div>)\n  }\n}","import React from 'react';\nimport RadioGroup from 'arui-feather/radio-group';\nimport Radio from 'arui-feather/radio';\nimport Checkbox from 'arui-feather/checkbox';\nimport CheckboxGroup from 'arui-feather/checkbox-group';\n\nconst LEVEL_MARGIN = 20;\nconst LEVEL_PADDING = 5;\n\nexport const generateInitialValuesForInstitutes = (institutes: IInstitute[]) => institutes.reduce((a, c) => ({\n  ...a,\n  ...c.options.reduce((a1, c1) => ({ ...a1, [c.value + '/' + c1.value]: { value: false } }), {})\n}), {});\n\nexport interface IInstituteValues {\n  [k: string]: {\n    value: boolean;\n    children?: IInstituteValues;\n  };\n}\ninterface IProps {\n  values: IInstituteValues;\n  institutes: IInstitute[];\n  onChange: (values: IInstituteValues) => void;\n  level: number;\n}\n\nexport interface IOption {\n  label: string;\n  value: string;\n  children?: () => IInstitute[];\n}\n\nexport interface IInstitute {\n  condition?: Function;\n  label: string;\n  value: string;\n  type: 'checkbox' | 'radio';\n  options: IOption[];\n}\n\nexport class Institutes extends React.Component<IProps> {\n  static defaultProps = {\n    level: 0\n  }\n  getResultValue(groupValue: string, optionValue: string) {\n    return groupValue + '/' + optionValue;\n  }\n\n  onChangeRadio = (groupValue: string) => (value: string, checked: boolean) => {\n    const result = this.getResultValue(groupValue, value);\n    const otherValues = Object.keys(this.props.values)\n      .filter(x => {\n        const [a,] = x.split('/');\n        return a === groupValue;\n      })\n      .filter(x => {\n        const [, b] = x.split('/');\n        return b !== value;\n      });\n    console.log(result, checked);\n    const state = {\n      ...this.props.values,\n      [result]: {\n        ...this.props.values[result],\n        value: checked\n      }\n    };\n    otherValues.forEach(v => {\n      state[v].value = !checked;\n    });\n\n    this.props.onChange(state);\n  }\n\n  onChangeCheckbox = (groupValue: string) => (checked: boolean, value: string) => {\n    const result = this.getResultValue(groupValue, value);\n    console.log(result, checked);\n    const state = {\n      ...this.props.values,\n      [result]: {\n        ...this.props.values[result],\n        value: checked\n      }\n    };\n    this.props.onChange(state);\n  }\n\n  renderChildren = (institute: IInstitute) => {\n    const { options, label, value: groupValue } = institute;\n\n    return options.map(o => {\n      const resultValue = this.getResultValue(groupValue, o.value);\n      console.log('o', o, resultValue, this.props.values[resultValue].value);\n      if (!(o.children && this.props.values[resultValue].value)) {\n        return null;\n      }\n      if (!this.props.values[resultValue].children) {\n        this.props.values[resultValue].children = generateInitialValuesForInstitutes(o.children());\n      }\n      const onChange = (values: IInstituteValues) => {\n        const state = {\n          ...this.props.values,\n          [resultValue]: {\n            ...this.props.values[resultValue],\n            children: values\n          }\n        };\n        this.props.onChange(state);\n      };\n      return (<Institutes\n        values={this.props.values[resultValue].children as IInstituteValues}\n        institutes={o.children()}\n        onChange={onChange}\n        level={ this.props.level + 1}\n      />);\n    });\n  }\n  renderRadio = (institute: IInstitute, parent?: IInstitute) => {\n    const { options, label, value: groupValue } = institute;\n    return (\n      <>\n        <RadioGroup label={label}>\n          {options.map(o => {\n            const resultValue = this.getResultValue(groupValue, o.value);\n            console.log('renderRadio', this.props.values, this.props.values[resultValue], resultValue);\n            return (<div key={resultValue}>\n              {/* {this.props.values[this.getResultValue(groupValue, o.value)]} */}\n              <Radio\n                text={o.label}\n                value={o.value}\n                onChange={this.onChangeRadio(groupValue)}\n                checked={this.props.values[resultValue].value}\n              />\n            </div>);\n          })}\n        </RadioGroup>\n        {this.renderChildren(institute)}\n      </>\n    );\n  }\n  renderCheckbox = (institute: IInstitute, parent?: IInstitute) => {\n    const { options, label, value: groupValue } = institute;\n    return (<>\n      <CheckboxGroup label={label}>\n        {options.map(o => {\n          const resultValue = this.getResultValue(groupValue, o.value);\n          console.log('renderCheckbox', this.props.values, this.props.values[resultValue], resultValue);\n          return (\n            <div key={resultValue}>\n              {/* {this.props.values[resultValue]} */}\n              <Checkbox\n                text={o.label}\n                value={o.value}\n                onChange={this.onChangeCheckbox(groupValue)}\n                checked={this.props.values[resultValue].value}\n              />\n            </div>);\n        })}\n      </CheckboxGroup>\n      {this.renderChildren(institute)}\n    </>);\n  }\n\n  renderInstitute = (institute: IInstitute, parent?: IInstitute) => {\n    if (institute.condition && !institute.condition(this.props.values)) {\n      return null;\n    }\n\n    const render = () => {\n      if (institute.type === 'radio') {\n        return this.renderRadio(institute, parent);\n      }\n      if (institute.type === 'checkbox') {\n        return this.renderCheckbox(institute, parent);\n      }\n    }\n\n    return (<div key={institute.value} className={'App__institute'}>\n      {render()}\n    </div>);\n  }\n\n  render() {\n    const style = { \n      marginLeft: `${this.props.level * (LEVEL_MARGIN)}px`,\n      paddingLeft: `${LEVEL_PADDING}px`,\n      marginTop: `${this.props.level * LEVEL_PADDING}px`,\n      borderLeft: this.props.level ? '1px solid #aaaa' : 'none',\n    };\n\n    return (<div style={ style }>\n      {this.props.institutes.map(i => {\n        return this.renderInstitute(i);\n      })}\n    </div>);\n  }\n}","import React from 'react';\nimport Heading from 'arui-feather/heading';\n\nimport { Countries, ICountriesValues } from './Countries';\n\nimport './App.css';\nimport { IInstitute, Institutes, IInstituteValues, generateInitialValuesForInstitutes } from './Institutes';\n\nconst COUNTRIES = [\n  'Австралия',\n  'АСЕАН',\n  'Бангладеш',\n  'Бруней Даруссалам',\n  'Восточный Тимор',\n  'Вьетнам',\n  'Гонконг',\n  'ЕАЭС',\n  'Евросоюз',\n  'Индия',\n  'Индонезия',\n  'Камбоджа',\n  'Канада',\n  'Китай',\n  'КНДР',\n  'Лаос',\n  'Макао',\n  'Малайзия',\n  'Мексика',\n  'Монголия',\n  'Мьянма',\n  'Новая Зеландия',\n  'Острова Кука',\n  'Пакистан',\n  'Папуа-Новая Гвинея',\n  'Перу',\n  'Республика Корея',\n  'Россия',\n  'Сингапур',\n  'США',\n  'Тайвань',\n  'Таиланд',\n  'Филиппины',\n  'Чили',\n  'Шри-Ланка',\n  'Япония'\n];\n\nconst ADVOCACY: IInstitute = {\n  label: 'Поддержка аттрактора',\n  value: 'advocacy',\n  type: 'radio',\n  options: [\n    { label: 'талассократ', value: 'thalassocratic' },\n    { label: 'теллурократия', value: 'tellorocratic' },\n    { label: 'нет (независимый)', value: 'none (independent)' }\n  ]\n};\n\nconst OPENNESS: IInstitute = {\n  label: 'Открытость',\n  value: 'openness',\n  type: 'radio',\n  options: [\n    { label: 'открытый регионализм', value: 'open regionalism' },\n    {\n      label: 'закрытый регионализм',\n      value: 'closed regionalism',\n      children: () => [\n        ADVOCACY\n      ]\n    }\n  ]\n};\n\nconst SCOPE: IInstitute = {\n  label: 'Сфера деятельности',\n  value: 'scope',\n  type: 'checkbox',\n  options: [\n    { label: 'экономическая', value: 'economie' },\n    { label: 'военнно-политическая', value: 'military-political' }\n  ]\n};\nconst LATERALISM: IInstitute = {\n  label: 'Латеральность',\n  value: 'lateralism',\n  type: 'radio',\n  options: [\n    { label: 'двухсторонний', value: 'bilateral' },\n    { label: 'многосторонний', value: 'multilateral' }\n  ]\n};\n\nconst COMMITMENT: IInstitute = {\n  label: 'Степень обязательства',\n  value: 'commitment',\n  type: 'radio',\n  options: [\n    { label: 'рекомендательный', value: 'non-regulatory' },\n    { label: 'обязывающий', value: 'regulatory' }\n  ]\n};\n\nconst INHERITANCE: IInstitute = {\n  label: 'Наследование',\n  value: 'inheritance',\n  type: 'radio',\n  options: [\n    { label: 'новый', value: 'new' },\n    {\n      label: 'производный',\n      value: 'deriative',\n      children: () => [\n        INHERITANCE_REQUIRED\n      ]\n    }\n  ]\n};\n\nconst INHERITANCE_REQUIRED: IInstitute = {\n  label: 'Требование к наследованию',\n  value: 'inheritance required',\n  type: 'radio',\n  options: [\n    {\n      label: 'требуется вступить в базовый',\n      value: 'yes',\n      children: () => [\n        SCOPE,\n        COMMITMENT,\n        UNIQNESS,\n        OPENNESS\n      ]\n    },\n    { label: 'не требуется', value: 'no' }\n  ]\n};\n\n\nconst UNIQNESS: IInstitute = {\n  label: 'Уникальность',\n  value: 'uniqness',\n  type: 'radio',\n  options: [\n    {\n      label: 'есть альтернативный',\n      value: 'alternative',\n      children: () => [\n        SCOPE,\n        COMMITMENT,\n        INHERITANCE,\n        OPENNESS\n      ]\n    },\n    { label: 'нет альтернативного', value: 'unique' }\n  ]\n};\n\n\nconst INSTITUTES: IInstitute[] = [\n  SCOPE,\n  LATERALISM,\n  COMMITMENT,\n  UNIQNESS,\n  INHERITANCE,\n  OPENNESS,\n]\n\n/**\n *\n * двусторонний: должно быть две ровно страны\n * многосторонний: не меньше 3\n *\n */\n\ninterface IProps {\n\n}\ninterface IState {\n  countries: ICountriesValues;\n  institutes: IInstituteValues;\n  minCountriesSelected: number;\n  maxCountriesSelected: number;\n  displayMembership: boolean;\n  membership: ICountriesValues;\n}\nclass App extends React.Component<IProps, IState> {\n  countries = COUNTRIES;\n  institutes = INSTITUTES;\n\n  state = {\n    countries: this.countries.reduce((a, c) => ({ ...a, [c]: false }), {}),\n    institutes: generateInitialValuesForInstitutes(this.institutes),\n    minCountriesSelected: 0,\n    maxCountriesSelected: 0,\n    membership: this.countries.reduce((a, c) => ({ ...a, [c]: false }), {}),\n    displayMembership: false,\n  }\n\n  onInstituteChange = (institutes: IInstituteValues) => {\n    let extraState: any = {};\n    if (institutes['lateralism/bilateral']) {\n      extraState = { minCountriesSelected: 2, maxCountriesSelected: 2 };\n    } else if (institutes['lateralism/multilateral']) {\n      extraState = { minCountriesSelected: 3, maxCountriesSelected: 0 };\n    }\n    console.log(\"institutes['inheritance/deriative'])\", institutes['inheritance/deriative']);\n    if (institutes['inheritance/deriative'].value) {\n      extraState.displayMembership = true;\n    } else {\n      extraState.displayMembership = false;\n    }\n    this.setState({ institutes, ...extraState });\n    console.log(institutes);\n\n  }\n  onCountriesChange = (countries: ICountriesValues) => {\n    this.setState({ countries });\n    console.log(countries);\n  }\n\n  membershipOnChange = (value: boolean, name: string) => {\n    console.log('membershipOnChange', value, name);\n    this.setState({ membership: { ...this.state.membership, [name]: value } });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App__institutes\">\n          <Heading size='xs'>\n            Выберите характеристики института:\n          </Heading>\n          <Institutes\n            institutes={this.institutes}\n            onChange={this.onInstituteChange}\n            values={this.state.institutes}\n          />\n        </div>\n        <div className=\"App__countries\">\n          <Countries\n            countries={this.countries}\n            onChange={this.onCountriesChange}\n            values={this.state.countries}\n            minSelected={this.state.minCountriesSelected}\n            maxSelected={this.state.maxCountriesSelected}\n            membershipValue={this.state.membership}\n            displayMembership={this.state.displayMembership}\n            membershipOnChange={this.membershipOnChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}